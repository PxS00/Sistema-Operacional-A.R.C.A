"""
M√≥dulo de Geolocaliza√ß√£o

Este m√≥dulo cont√©m fun√ß√µes para obter informa√ß√µes de localiza√ß√£o a partir de
coordenadas geogr√°ficas (latitude e longitude) utilizando a API OpenCage Geocoder.
"""

import requests
from app.core.config import API_KEY

def obter_regiao(lat, lon):
    """
    Obt√©m informa√ß√µes detalhadas de localiza√ß√£o a partir de coordenadas geogr√°ficas.
    
    Args:
        lat (float): Latitude da localiza√ß√£o
        lon (float): Longitude da localiza√ß√£o
        
    Returns:
        tuple: Tupla contendo (rua, bairro, cidade, estado, pais)
            - Se houver erro na requisi√ß√£o, retorna (None, None, None, None, None)
            - Se algum componente n√£o for encontrado, retorna um valor padr√£o
              (ex: "Rua n√£o identificada")
    
    Raises:
        requests.RequestException: Se houver erro na requisi√ß√£o HTTP
    """
    url = "https://api.opencagedata.com/geocode/v1/json"
    params = {
        "key": API_KEY,
        "q": f"{lat},{lon}",
        "language": "pt",
        "pretty": 1
    }

    try:
        response = requests.get(url, params=params)
        response.raise_for_status()  # Levanta exce√ß√£o para c√≥digos de erro HTTP

        dados = response.json()
        if dados["results"]:
            componentes = dados["results"][0]["components"]

            # Obt√©m os componentes da localiza√ß√£o com valores padr√£o caso n√£o encontrados
            rua     = componentes.get("road") or "Rua n√£o identificada"
            bairro  = componentes.get("neighbourhood") or componentes.get("suburb") or "Bairro n√£o identificado"
            cidade  = componentes.get("city") or componentes.get("town") or componentes.get("village") or "Cidade n√£o identificada"
            estado  = componentes.get("state") or "Estado n√£o identificado"
            pais    = componentes.get("country") or "Pa√≠s n√£o identificado"

            print(f"üìç Localiza√ß√£o: Rua: {rua}, Bairro: {bairro}, Cidade: {cidade}, Estado: {estado}, {pais}")
            return rua, bairro, cidade, estado, pais

    except requests.RequestException as e:
        print(f"‚ö†Ô∏è Erro ao obter a localiza√ß√£o: {str(e)}")
        return None, None, None, None, None
